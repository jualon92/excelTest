import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "../styles/Home.module.css";
import PersonAddIcon from "@mui/icons-material/PersonAdd";
import { LoadingButton } from "@mui/lab";
import CloudUploadIcon from "@mui/icons-material/CloudUpload";
import { ChangeEvent, useEffect, useState } from "react";
import { Persona } from "../utils/interfaces";
//@ts-ignore
import { PersonasSchemaValidation } from "../utils/validation";
import useNotification from "../lib/useSnackbar";
import { map, tail, times, uniq } from "lodash";
import _ from "lodash";
import { sort_by_id } from "../utils";

import * as XLSX from "xlsx-js-style";
import { buildExcelPersonas, getJSONFromSheet} from "../utils/xlsx";

export default function Home() {
  const [loading, setLoading] = useState(false); 
  const [msg, sendNotification] = useNotification();

  

  const readExcel = async (file: ChangeEvent<HTMLInputElement>) => {
    //init file reader
    const fileReader = new FileReader();
    const targetFile = (file.target as HTMLInputElement)?.files?.[0]
    if (targetFile){
      fileReader.readAsArrayBuffer(targetFile);
    }
     

    fileReader.onload = async (e) => {
      const rawData: Persona[] = getJSONFromSheet(e);
      try {
        await PersonasSchemaValidation.validate(rawData) 
        buildExcelPersonas(rawData);

        sendNotification({
          msg: `archivo descargado `,
          variant: "success",
        });
      } catch (err) {
        sendNotification({
          msg: `formato de archivo incompatible.`,
          variant: "error",
        });
      }
    };
  };

   

  return (
    <>
      <Head>
        <title>Excel</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>Excel </h1>

        <LoadingButton
          sx={{
            minHeight: "51px",
            border: "1px solid transparent",
          }}
          loading={loading}
          loadingPosition="start"
          startIcon={<CloudUploadIcon />}
          variant="contained"
          component="label"
        >
          UPLOAD EXCEL SHEET
          <input
            onChange={readExcel}
            hidden
            accept=".xlsx"
            multiple
            type="file"
          />
        </LoadingButton>
      </main>
    </>
  );
}
